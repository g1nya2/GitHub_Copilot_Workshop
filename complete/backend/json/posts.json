{
	"paths": {
		"/posts": {
			"get": {
				"tags": ["Posts"],
				"summary": "Get posts list",
				"description": "Retrieve a list of posts",
				"operationId": "get_posts_list_posts_get",
				"parameters": [
					{
						"name": "page",
						"in": "query",
						"description": "Page number for pagination (1-indexed)",
						"schema": {
							"type": "integer",
							"default": 1,
							"minimum": 1
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of items per page",
						"schema": {
							"type": "integer",
							"default": 10,
							"minimum": 1,
							"maximum": 100
						}
					}
				],
				"responses": {
					"200": {
						"description": "Posts retrieved successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PostList" }
							}
						}
					},
					"401": {
						"description": "Unauthorized - Invalid or expired session",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					}
				}
			},
			"post": {
				"tags": ["Posts"],
				"summary": "Create a new post",
				"description": "Add a new post to the authenticated user's profile",
				"operationId": "create_post_posts_post",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/PostCreate" }
						}
					},
					"required": true,
					"description": "Post content to create"
				},
				"responses": {
					"201": {
						"description": "Post created successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PostDetail" }
							}
						}
					},
					"400": {
						"description": "Bad Request - Invalid input data",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"401": {
						"description": "Unauthorized - Invalid or expired session",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/posts/{postId}": {
			"get": {
				"tags": ["Posts"],
				"summary": "Get post details by ID",
				"description": "Retrieve complete information about a specific post",
				"operationId": "get_post_detail_posts__postId__get",
				"parameters": [
					{
						"name": "postId",
						"in": "path",
						"required": true,
						"description": "ID of the post to retrieve",
						"schema": { "type": "integer", "title": "Post ID" }
					}
				],
				"responses": {
					"200": {
						"description": "Post details retrieved successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PostDetail" }
							}
						}
					},
					"404": {
						"description": "Not Found - Post does not exist",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Posts"],
				"summary": "Delete a post",
				"description": "Remove a post created by the authenticated user",
				"operationId": "delete_post_posts__postId__delete",
				"parameters": [
					{
						"name": "postId",
						"in": "path",
						"required": true,
						"description": "ID of the post to delete",
						"schema": { "type": "integer", "title": "Post ID" }
					}
				],
				"responses": {
					"200": {
						"description": "Post deleted successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/SuccessResponse" }
							}
						}
					},
					"401": {
						"description": "Unauthorized - Not your post or invalid session",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"404": {
						"description": "Not Found - Post does not exist",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"put": {
				"tags": ["Posts"],
				"summary": "Update a post",
				"description": "Modify content of a post created by the authenticated user",
				"operationId": "update_post_posts__postId__put",
				"parameters": [
					{
						"name": "postId",
						"in": "path",
						"required": true,
						"description": "ID of the post to update",
						"schema": { "type": "integer", "title": "Post ID" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/PostUpdate" }
						}
					},
					"description": "Updated post content"
				},
				"responses": {
					"200": {
						"description": "Post updated successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/PostDetail" }
							}
						}
					},
					"401": {
						"description": "Unauthorized - Not your post or invalid session",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"404": {
						"description": "Not Found - Post does not exist",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/posts/{postId}/like": {
			"post": {
				"tags": ["Posts"],
				"summary": "Like a post",
				"description": "Add the authenticated user's like to a post",
				"operationId": "like_post_posts__postId__like_post",
				"parameters": [
					{
						"name": "postId",
						"in": "path",
						"required": true,
						"description": "ID of the post to like",
						"schema": { "type": "integer", "title": "Post ID" }
					}
				],
				"responses": {
					"200": {
						"description": "Post liked successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/LikeResponse" }
							}
						}
					},
					"400": {
						"description": "Bad Request - Already liked this post",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"404": {
						"description": "Not Found - Post does not exist",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"delete": {
				"tags": ["Posts"],
				"summary": "Unlike a post",
				"description": "Remove the authenticated user's like from a post",
				"operationId": "unlike_post_posts__postId__like_delete",
				"parameters": [
					{
						"name": "postId",
						"in": "path",
						"required": true,
						"description": "ID of the post to unlike",
						"schema": { "type": "integer", "title": "Post ID" }
					}
				],
				"responses": {
					"200": {
						"description": "Post unliked successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/LikeResponse" }
							}
						}
					},
					"400": {
						"description": "Bad Request - Haven't liked this post",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"404": {
						"description": "Not Found - Post does not exist",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		},
		"/posts/{postId}/comments": {
			"get": {
				"tags": ["Posts"],
				"summary": "Get comments for a post",
				"description": "Retrieve all comments on a specific post",
				"operationId": "get_post_comments_posts__postId__comments_get",
				"parameters": [
					{
						"name": "postId",
						"in": "path",
						"required": true,
						"description": "ID of the post to get comments from",
						"schema": { "type": "integer", "title": "Post ID" }
					},
					{
						"name": "page",
						"in": "query",
						"description": "Page number for pagination (1-indexed)",
						"schema": {
							"type": "integer",
							"default": 1,
							"minimum": 1
						}
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of items per page",
						"schema": {
							"type": "integer",
							"default": 10,
							"minimum": 1,
							"maximum": 100
						}
					}
				],
				"responses": {
					"200": {
						"description": "Comments retrieved successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/CommentList" }
							}
						}
					},
					"404": {
						"description": "Not Found - Post does not exist",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			},
			"post": {
				"tags": ["Posts"],
				"summary": "Add a comment to a post",
				"description": "Create a new comment on a specific post",
				"operationId": "create_comment_posts__postId__comments_post",
				"parameters": [
					{
						"name": "postId",
						"in": "path",
						"required": true,
						"description": "ID of the post to comment on",
						"schema": { "type": "integer", "title": "Post ID" }
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/CommentCreate" }
						}
					},
					"description": "Comment content to add"
				},
				"responses": {
					"201": {
						"description": "Comment added successfully",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/Comment" }
							}
						}
					},
					"400": {
						"description": "Bad Request - Invalid input data",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"404": {
						"description": "Not Found - Post does not exist",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/ErrorResponse" }
							}
						}
					},
					"422": {
						"description": "Validation Error",
						"content": {
							"application/json": {
								"schema": { "$ref": "#/components/schemas/HTTPValidationError" }
							}
						}
					}
				}
			}
		}
	}
}
